---
- hosts: local

  vars:
    bundle:
      name: NAME_ME
      img_base: IMG_BASE

    vm_flavor: "16"
    bundle_target_name: "{{ bundle.name }}-{{ ansible_date_time.date }}{{ ansible_date_time.hour }}{{ ansible_date_time.minute }}"
    packer_file: "bundle-ansible.packer.json"

  tasks:
    - name: building server image with Packer
      shell: "packer build -var 'bundle_path={{ bundle.name }}' -var 'source_image={{ bundle.img_base }}' -var 'image_name={{ bundle_target_name }}' -var 'factory_flavor={{ vm_flavor }}' {{ packer_file }} > packer.{{ bundle_target_name }}.log 2>&1"

    - name: retrieve built image id
      shell: openstack image list --private | grep {{ bundle_target_name }} | tr "|" " " | tr -s " " | cut -d " " -f2
      register: packed_image_id

    - name: building remove-property string for image cleanup
      shell: openstack image show -f value -c properties {{ packed_image_id.stdout }} | tr ", " "\n" | grep -v "^$" | cut -d"=" -f1 | grep -v -E "(cw_os|cw_origin|hw_rng_model)" | sed 's/^/--remove-property /g' | tr "\n" " "
      register: purge_props

    - name: removing useless properties from built image
      shell: glance image-update {{ purge_props.stdout }} {{ packed_image_id.stdout }}

    - name: target repository is ready
      file:
        path=target/{{ bundle.name }}
        state=directory

    - name: generating heat stack
      template:
        src={{ item }}
        dest=target/{{ item | replace('.j2', '') }}
      with_fileglob: {{ bundle.name }}/heat/*.j2

    - debug: msg="Image build is a success. The image {{ packed_image_id.stdout }} is now in your glance images."




